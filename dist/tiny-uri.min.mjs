const atob="undefined"!=typeof window?window.atob:t=>Buffer.from(t,"base64").toString("ascii"),btoa="undefined"!=typeof window?window.btoa:t=>Buffer.from(t,"ascii").toString("base64"),uriRegEx=/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,authRegEx=/^(.+\:.+@.+)/,portRegEx=/:(\d+)$/,numPortRegEx=/(\d+)$/,qRegEx=/^([^=]+)(?:=(.*))?$/,urlTempQueryRegEx=/\{\?(.*?)\}/;class StringBuilder{constructor(t){this.string=t&&void 0!==t?String(t):String("")}toString(){return this.string}append(t){return this.string+=t,this}insert(t,e){this.string.length;let s=this.string.slice(0,t),r=this.string.slice(t);return this.string=s+e+r,this}}class Authority{constructor(t,e){return this.ctx=e,this.model=e.model,t&&this.set(t),this}get(){return this.model.authority}set(t){if(t===this.model.host)return this.ctx;const e=new StringBuilder,s=t.split("@");if(console.log("s",s),this.model.user=s[0],authRegEx.test(t))e.append(t);else try{this.model.user=atob(this.model.user),e.append(this.model.user).append("@").append(this.model.host),this.model.port&&e.append(":").append(this.model.port)}catch(t){}return this.model.authority=e.toString(),this.ctx}toString(t){return t?this.ctx.toString():this.model.user?(new StringBuilder).append(btoa(this.model.user)).append("@").append(this.model.host):null}}class Hash{constructor(t,e){return this.ctx=e,this.model=e.model,t&&this.set(t),this}get(){return this.model.hash}set(t){let e=t.split("?");return e.length>0?this.model.hash="#"+e[0].replace(/#/,""):this.model.hash="#"+t.replace(/#/,""),this.ctx}toString(t){return t?this.ctx.toString():this.get()}}class Host{constructor(t,e){return this.ctx=e,this.model=this.ctx.model,t&&this.set(t),this}get(){return this.model.host}set(t){const e=t.split("@");if(e.length>1){const t=e[1].split(":");t.length>0?this.model.host=t[0]:this.model.host=e[1]}else this.model.host=t;return this.ctx}toString(t){return t?this.ctx.toString():this.get()}}class Fragment{constructor(t,e){return this.ctx=e,this.model=e.model,t&&this.set(t),this}get(){return this.model.fragment}set(t){this.model.hash&&(this.model.fragment=this.model.hash.replace(/#/,""))}toString(t){return t?this.ctx.toString():this.get()}}class Path{constructor(t,e={}){return this.ctx=e,this.model=e.model,this.model.path=[],t&&this.parse(t),this}append(t){return this.model.path.push(t),this.ctx}delete(t){if(!t)return this.model.path.pop(),this.ctx}get(){return this.model.path}parse(t=""){let e=decodeURIComponent(t),s=e.split("/");Array.isArray(s)&&(e.match(/^\//)&&s.shift(),""===s[0]&&s.shift(),s.length>1&&e.match(/\/$/)&&s.pop(),this.model.path=s)}replace(t,e){return"file"===e?(this.model.path.splice(this.model.path.length-1,1,t),this.ctx):Number.isInteger(e)?(this.model.path.splice(e,1,t),this.ctx):(this.parse(t),this.ctx)}set(t){return this.parse(t),this.ctx}toString(t){return t?this.ctx.toString():Array.isArray(this.model.path)?this.model.path.join("/"):""}}class Port{constructor(t,e){return this.ctx=e,this.model=this.ctx.model,t&&this.set(t),this}get(){return this.model.port}set(t){const e=isNaN(t)?t:String(t);let s=e.match(portRegEx),r=e.match(numPortRegEx);return s||r?(s&&s[1]?this.model.port=s[1]:r&&r[1]&&(this.model.port=r[1]),this.ctx):this.ctx}toString(t){return t?this.ctx.toString():this.get()}}class Query{constructor(t,e={}){return this.ctx=e,this.model=e.model,this.set(t),this}add(t={}){return this.model.query=this._convert(t,this.model.query[0],this.model.query[1]),this.ctx}clear(){return this.model.query=[[],[]],this.ctx}_convert(t,e=[],s=[]){for(let r in t)if(Array.isArray(t[r]))for(let i=0;i<t[r].length;i++){let h=t[r][i];e.push(r),s.push(h)}else t[r]&&(e.push(r),s.push(t[r]));return[e,s]}get(){let t={},e=this.model.query;for(let s=0;s<e[0].length;s++){let r=e[0][s],i=e[1][s];t[r]?t[r].push(i):t[r]=[i]}return t}getUrlTemplateQuery(){return this._urlTemplateQueryString}merge(t){let e=this.model.query[0],s=this.model.query[1];for(let r in t){let i=!1;for(let h=0;h<e.length;h++){if(r===e[h]){if(i){e.splice(h,1),s.splice(h,1);continue}Array.isArray(t[r])?s[h]=t[r].shift():void 0===t[r]||null===t[r]?(e.splice(h,1),s.splice(h,1),delete t[r]):(s[h]=t[r],delete t[r]),i=!0}}}return this.model.query=this._convert(t,this.model.query[0],this.model.query[1]),this.ctx}_parse(t=""){let e=[[],[]],s=t.split(/&|;/);for(let t=0;t<s.length;t++){let r=s[t].match(qRegEx);if(r&&void 0!==r[r.length-1]){r.shift();for(let t=0;t<r.length;t++){let s=r[t];e[t].push(decodeURIComponent(s.replace("+"," ","g")))}}}return e}set(...t){let e=[...t];if(1===e.length)this.model.query="object"==typeof e[0]?this._convert(e[0]):this._parse(e[0]);else if(0===e.length)this.clear();else{let t={};t[e[0]]=e[1],this.merge(t)}return this.ctx}setUrlTemplateQuery(t){this._urlTemplateQueryString=t}toString(t){if(t)return this.ctx.toString();let e=[],s=this.model.query[0],r=this.model.query[1];for(let t=0;t<s.length;t++)e.push(encodeURIComponent(s[t])+"="+encodeURIComponent(r[t]));return e.join("&")}}class Scheme{constructor(t,e){return this.ctx=e,this.model=e.model,this.set(t),this}get(){return this.model.scheme}set(t){const e=t.match(/^([a-z][a-z0-9+\-.]*):/);return e&&e[1]?this.model.scheme=e[1]:""===t||t.includes("/")||(this.model.scheme=t),this.ctx}toString(t){return t?this.ctx.toString():this.get()}}class TinyUri{constructor(t){return this.model={},this.parse(t)}parse(t){let e=t?t.match(uriRegEx):[],s=t?t.match(urlTempQueryRegEx):[];return this.host=new Host(e[4],this),this.port=new Port(e[4],this),this.authority=new Authority(e[4],this),this.scheme=new Scheme(t,this),this.protocol=this.scheme,this.path=new Path(e[5]?e[5].replace(/{$/,""):"",this),this.userInfo=this.authority,this.hash=new Hash(e[9],this),this.fragment=new Fragment(e[9],this),this.query=new Query(e[7]?e[7]:"",this),s&&this.query.setUrlTemplateQuery(s[1]),this}toString(){const t=this.authority.toString(),e=this.hash.toString(),s=this.host.toString(),r=this.path.toString(),i=this.query.toString(),h=this.scheme.toString(),o=new StringBuilder;return h&&(/mailto/.test(h)?o.append(h).append(":"):o.append(h).append(":").append("//")),t?o.append(t):s&&o.append(s),""!==r&&o.append("/").append(r),e&&o.append(e),""!==i&&o.append("?").append(i),o.toString()}static clone(t){return new TinyUri(t.toString())}}export default TinyUri;
